{"version":3,"sources":["components/home_screen/Banner.js","components/home_screen/MyLifeTimeline.js","components/home_screen/HomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["Banner","id","align","Component","Colors","MyLifeTimeline","lineColor","key","dateText","style","color","dateInnerStyle","background","bodyContainerStyle","padding","borderRadius","boxShadow","className","href","HomeScreen","AppScreen","HOME_SCREEN","App","state","currentScreen","goHome","setState","this","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8afb69ac.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Banner extends Component {\r\n    render() {\r\n        return (\r\n\t    <div id=\"contactinfo\">\r\n            <h1 align=\"center\">Christopher Wong</h1>\r\n            <pre><h4 align=\"center\">Phone: 917-584-4986  Email: cwong51799@gmail.com</h4></pre>\r\n\t    </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\nconst Colors = {\r\n    BLACK : \"#000000\",\r\n    RED: '#e86971',\r\n    BLUE : '#61b8ff',\r\n    GREEN : \"#54B948\",\r\n    WHITE: \"#FFFFFF\",\r\n    LIME: \"#dddc22\",\r\n    PURPLEISH: \"#db24ad\",\r\n    LIGHTBLUE: \"#18bfe7\",\r\n    TAN : \"#eba963\",\r\n    BEIGE: \"#aa9755\",\r\n}\r\n\r\nexport default class MyLifeTimeline extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Timeline lineColor={'#ddd'}>\r\n  <TimelineItem\r\n    key=\"001\"\r\n    dateText=\"05/17/1999\"\r\n    style={{ color: Colors.RED }}\r\n  >\r\n    <h3>Started my journey as a human.</h3>\r\n  </TimelineItem>\r\n  <TimelineItem\r\n    key=\"002\"\r\n    dateText=\"2004 – 2011\"\r\n    dateInnerStyle={{ background: Colors.BLUE, color: Colors.WHITE }}\r\n    style= {{ color: Colors.BLUE}}\r\n    bodyContainerStyle={{\r\n      background: '#ddd',\r\n      padding: '20px',\r\n      borderRadius: '8px',\r\n      boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)',\r\n    }}\r\n  >\r\n    <h3 style={{ color: Colors.BLACK }}>William Sidney Mount</h3>\r\n    <h5 className=\"description\">Elementary School</h5>\r\n    <p>Not much to say here.</p>\r\n  </TimelineItem>\r\n  <TimelineItem\r\n     key=\"003\"\r\n     dateText=\"2011 – 2017\"\r\n     dateInnerStyle={{ background: Colors.GREEN, color: Colors.WHITE }}\r\n     style= {{ color: Colors.GREEN}}\r\n     bodyContainerStyle={{\r\n       background: '#ddd',\r\n       padding: '20px',\r\n       borderRadius: '8px',\r\n       boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)',\r\n     }}\r\n   >\r\n     <h3 style={{ color: Colors.BLACK }}>Metropolitan Expeditionary Learning School</h3>\r\n     <h5 className=\"description\">Middle School/High School</h5>\r\n         <ul><span className = \"category\">Extracurriculars</span>\r\n         <li>- Joined Student Goverment in Sophomore year and was re-elected until I graduated.\r\n             <ul>\r\n                <li>- Opened the \"school store,\" a room outside the cafeteria where we would sell snacks, and sodas and tickets to our events.</li>\r\n                <li>- Organized and executed fundraiser events. Contacted local restaurants and businesses to get them to sponsor.</li>\r\n                <li>- Raised over $11,000 for the class fund which was used to subsidize Senior dues by about 40%.</li>\r\n             </ul>\r\n         </li>\r\n         </ul>\r\n      <ul><span  className = \"category\">Accomplishments</span>\r\n        <li>- High Honors all throughout high school and received the Math Philosopher's award in Junior year. </li>\r\n        <li>- Ended 3rd in my graduating class.</li>\r\n        <li>- Got detention once for forgetting to wear uniform shoes after Halloween.</li>\r\n      </ul>\r\n  </TimelineItem>\r\n  <TimelineItem\r\n    key=\"005\"\r\n    dateText=\"07/2017 – Present\"\r\n    dateInnerStyle={{ background: Colors.LIGHTBLUE }}\r\n    style= {{ color: Colors.LIGHTBLUE}}\r\n    bodyContainerStyle={{\r\n        background: '#ddd',\r\n        padding: '20px',\r\n        borderRadius: '8px',\r\n        boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)',\r\n      }}\r\n  >\r\n    <h3>Summer Camp Counseling</h3>\r\n    <div><a href=\"https://www.commonpointqueens.org\">Central Queens Y</a> (Summers 2014-2017)</div>\r\n    <div><a href=\"https://citgch.org/\">Church in the Gardens</a> (Summers 2017-2018)</div>\r\n    <ul>\r\n        <li>- Led large groups of children ranging between the ages of 5-7</li>\r\n        <li>- Learned how to optimally designate work between co-counselors and myself based on strengths.</li>\r\n        <li>- Struck a good balance between staying fun while maintaining authority with the kids.</li>\r\n    </ul>\r\n  </TimelineItem>\r\n  <TimelineItem\r\n    key=\"006\"\r\n    dateText=\"07/2017 – Present\"\r\n    dateInnerStyle={{ background: Colors.RED }}\r\n    style= {{ color: Colors.RED}}\r\n    bodyContainerStyle={{\r\n        background: '#ddd',\r\n        padding: '20px',\r\n        borderRadius: '8px',\r\n        boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)',\r\n      }}\r\n  >\r\n    <h3>Stony Brook University</h3>\r\n    <h5 className=\"description\">B.S. Computer Science, Junior</h5>\r\n     <ul><span className = \"category\">Coursework</span>\r\n         <li>- Studying topics including algorithms, data structures, sorting, recursion, dynamic programming,\r\n         object-oriented programming, functional programming. </li>\r\n         <li>- Learned important design practices used to create efficient \r\n             maintainable, scalable, and interactive software.\r\n         </li>\r\n         <li>- Used Java, Python, MIPS Assembly, Javascript/HTML/CSS, and O'Caml</li>\r\n     </ul>\r\n     <ul><span className = \"category\">League of Legends E-Sports Team</span>\r\n             <ul>\r\n                 <li>- Competed as a player in the official <a href=\"https://nexus.leagueoflegends.com/en-us/esports/search/college/\">Riot tournament</a>.</li>\r\n                 <li>- Earned a $2,000 scholarship for <a href=\"https://news.stonybrook.edu/student-spotlight/sbus-league-of-legends-team-goes-virtually-undefeated/\">placing 3rd in the Eastern conference</a>.</li>\r\n                 <li>- Learned a lot about effective communication and personal growth.</li>\r\n             </ul>\r\n     </ul>\r\n  </TimelineItem>\r\n  <TimelineItem\r\n    key=\"007\"\r\n    dateText=\"05/2019\"\r\n    dateInnerStyle={{ background: Colors.PURPLEISH }}\r\n    style={{ color: Colors.PURPLEISH }}\r\n    bodyContainerStyle={{\r\n      background: '#ddd',\r\n      padding: '20px',\r\n      borderRadius: '8px',\r\n      boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)',\r\n    }}\r\n  >\r\n    <h3>Created Virtual McSlap</h3>\r\n    <h5 className=\"description\">A scheduling bot created using Discord.js.</h5>\r\n    <ul><span className = \"category\">Description</span>\r\n         <li>- Virtual McSlap was created for my collegiate e-sport's team discord. The bot is able to\r\n               store matches in an <a href=\"https://www.npmjs.com/package/enmap\">Enmap</a> and can display a formatted upcoming schedule as well as alert players when\r\n               a match is coming up shortly. See more about it <a href=\"https://imgur.com/a/jIYuI2x\">here</a>. </li>\r\n         <li>- The bot is deployed on Amazon Web Services and is used by my own team and some friends.</li>\r\n    </ul>\r\n    <ul><span className = \"category\">Takeaways</span>\r\n         <li>- I wanted to work with some form of persistent storage and originally looked into SQL options. I learned that\r\n               for an application like Virtual McSlap, local storage is more efficient.\r\n         </li>\r\n         <li>- There's something really fun about completely owning a project like this. I encourage all my friends to try and\r\n               find bugs in the bot. Whenever they find one, there's a satisfaction that comes with being the go-to. \r\n         </li>\r\n         <li>- When visiting the code at a later date to fix bugs or add features, I learned the hard way that thorough documentation is extremly\r\n               helpful. I feel as though someone should be able to read the code and its documentation and have a good idea as \r\n               to what's going on.\r\n         </li>\r\n    </ul>\r\n    <ul><span className = \"category\">Technologies Used</span>\r\n        <li>- Javascript, Discord.js, Enmap, Amazon Web Services</li>\r\n    </ul>\r\n\r\n  </TimelineItem>\r\n  <TimelineItem\r\n    key=\"008\"\r\n    dateText=\"06/2019\"\r\n    dateInnerStyle={{ background: Colors.GREEN }}\r\n    style={{ color: Colors.GREEN }}\r\n    bodyContainerStyle={{\r\n      background: '#ddd',\r\n      padding: '20px',\r\n      borderRadius: '8px',\r\n      boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)',\r\n    }}\r\n  >\r\n        <h3>Created Simple Finance Log</h3>\r\n    <h5 className=\"description\">An Android App that helps keep track of spending/debt.</h5>\r\n    <ul><span className = \"category\">Description</span>\r\n         <li>- Simple Finance Log stemmed from my need to manage my money better in college. Often times I'd check the money I \r\n               have allocated for food and question where it went. Also, some of my friends never bring their wallets and I'd\r\n               spot them and try really hard to remember their debts. Simple Finance Log solves both these problems.\r\n         </li>\r\n         <li>- The app was created in Android Studio and uses <a href=\"https://www.sqlite.org/index.html\">SQLite</a> to keep track of purchases and allows users to view their spending by the day/week and provides\r\n               insight on what they're spending on.\r\n         </li>\r\n         <li>- Simple Finance Log is on the Google Play Store! Find it <a href=\"https://play.google.com/store/apps/details?id=com.SimpleFinApp.myapplication\">here</a>.</li>\r\n    </ul>\r\n    <ul><span className = \"category\">Takeaways</span>\r\n         <li>- I originally planned on using SQL and then realized the biggest benefit of that would be if I had account that\r\n               you could log in through multiple devices and see the same data. This is beyond the scope of this project. Also SQL\r\n               services are expensive.\r\n         </li>\r\n         <li>- I made this app knowing that there are many better like it. I made mine slightly unique by having the \"Tabs\" category but don't\r\n               really expect anyone but myself to use it. Still, I created it as a learning experience. If I had more time I would try to make mine\r\n               just as good and if not better than the ones made by companies.\r\n         </li>\r\n         <li>- During the devlopment process, I created a few features which allowed me to test the functionality of the app. For example, I created a \r\n               method which I bound to a button that generated 1,000 random purchases which helped a ton. I was able to speed up my development by adding\r\n               these features.\r\n         </li>\r\n         <li>- Android Studio is really interesting, but it took many YouTube videos to figure it out.\r\n         </li>\r\n    </ul>\r\n    <ul><span className = \"category\">Technologies Used</span>\r\n        <li>- Java, SQLite, Android Studio</li>\r\n    </ul>\r\n  </TimelineItem>\r\n  <TimelineItem\r\n    key=\"009\"\r\n    dateText=\"08/2019\"\r\n    dateInnerStyle={{ background: Colors.BEIGE }}\r\n    style={{ color: Colors.BEIGE }}\r\n    bodyContainerStyle={{\r\n      background: '#ddd',\r\n      padding: '20px',\r\n      borderRadius: '8px',\r\n      boxShadow: '0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)',\r\n    }}\r\n  >\r\n    <h3>Started Sale Scraper (WIP)</h3>\r\n    <h5 className=\"description\">An Android App that reads the sale pages of several popular clothing brands</h5>\r\n    <ul><span className = \"category\">Description</span>\r\n         <li>- The app uses <a href=\"https://jsoup.org/\">jsoup</a> to parse through and display clothing sales. The idea is \r\n              that if I knew I wanted a blue shirt, I can search through all the sites at once and there will be a uniform format\r\n              of all the sites in one place. \r\n          </li>\r\n          <li> - Still a Work In Progress, kind of brushed this one to the side for a bit. Will continue if I find time but check it\r\n               out <a href=\"https://imgur.com/a/rn7f5kE\">here</a> until then.\r\n          </li>\r\n    </ul>\r\n    <ul><span className = \"category\">Takeaways</span>\r\n         <li>- Web Scraping can be difficult since every website displays their listings differently. I can definetly see why \r\n               some applications don't \"support\" certain places. For example, Uniqlo's website loads more listings into the DOM \r\n               as the user scrolls down. I couldn't virtually scroll down and so currently the Uniqlo page only takes the first 20 listings.\r\n               In contrast, H&amp;M can load 500 listings at once.\r\n         </li>\r\n         <li>- I really enjoy creating apps that I personally find useful. If I'm passionate about what I'm working on I feel \r\n               as though I can create something great.\r\n         </li>\r\n    </ul>\r\n    <ul><span className = \"category\">Technologies Used</span>\r\n        <li>- Java, jsoup, Android Studio,  </li>\r\n    </ul>\r\n  </TimelineItem>\r\n  <TimelineItem\r\n    key=\"010\"\r\n    dateText=\"Present\"\r\n    dateInnerStyle={{ background: Colors.TAN }}\r\n    style={{ color: Colors.TAN }}\r\n  >\r\n    <h3>Looking for a Summer internship or research opportunity.</h3>\r\n  </TimelineItem>\r\n  </Timeline>   \r\n              </div>\r\n          )\r\n      }\r\n  }\r\n","import React, { Component } from 'react'\r\nimport Banner from './Banner'\r\nimport MyLifeTimeline from './MyLifeTimeline';\r\n\r\nexport default class HomeScreen extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Banner/>\r\n                <MyLifeTimeline/>     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport './App.css';\nimport './styles.css';\nconst AppScreen = {\n  HOME_SCREEN : \"HOME_SCREEN\"\n}\nclass App extends Component{\n  state = {\n    currentScreen : AppScreen.HOME_SCREEN\n  }\n\n  goHome = () => {\n    this.setState({currentScreen: AppScreen.HOME_SCREEN});\n  }\n\n  render (){\n    switch (this.state.currentScreen){\n        case AppScreen.HOME_SCREEN:\n          return <HomeScreen />\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}